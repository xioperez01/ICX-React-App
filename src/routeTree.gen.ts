/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'
import { Route as AppLayoutImport } from './routes/_app/_layout'
import { Route as authLayoutImport } from './routes/(auth)/_layout'
import { Route as AppLayoutIndexImport } from './routes/_app/_layout/index'
import { Route as AppLayoutUsersIndexImport } from './routes/_app/_layout/users/index'
import { Route as AppLayoutTeamsIndexImport } from './routes/_app/_layout/teams/index'
import { Route as AppLayoutProjectsIndexImport } from './routes/_app/_layout/projects/index'
import { Route as AppLayoutCompaniesIndexImport } from './routes/_app/_layout/companies/index'
import { Route as AppLayoutActivitiesIndexImport } from './routes/_app/_layout/activities/index'
import { Route as authLayoutRegisterIndexImport } from './routes/(auth)/_layout/register/index'
import { Route as authLayoutLoginIndexImport } from './routes/(auth)/_layout/login/index'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)

const AppLayoutIndexRoute = AppLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutUsersIndexRoute = AppLayoutUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutTeamsIndexRoute = AppLayoutTeamsIndexImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutProjectsIndexRoute = AppLayoutProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutCompaniesIndexRoute = AppLayoutCompaniesIndexImport.update({
  id: '/companies/',
  path: '/companies/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutActivitiesIndexRoute = AppLayoutActivitiesIndexImport.update({
  id: '/activities/',
  path: '/activities/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const authLayoutRegisterIndexRoute = authLayoutRegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => authLayoutRoute,
} as any)

const authLayoutLoginIndexRoute = authLayoutLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => authLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_layout': {
      id: '/(auth)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof authRoute
    }
    '/_app/_layout': {
      id: '/_app/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof AppImport
    }
    '/_app/_layout/': {
      id: '/_app/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppLayoutIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/(auth)/_layout/login/': {
      id: '/(auth)/_layout/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLayoutLoginIndexImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/register/': {
      id: '/(auth)/_layout/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authLayoutRegisterIndexImport
      parentRoute: typeof authLayoutImport
    }
    '/_app/_layout/activities/': {
      id: '/_app/_layout/activities/'
      path: '/activities'
      fullPath: '/activities'
      preLoaderRoute: typeof AppLayoutActivitiesIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/_app/_layout/companies/': {
      id: '/_app/_layout/companies/'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof AppLayoutCompaniesIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/_app/_layout/projects/': {
      id: '/_app/_layout/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AppLayoutProjectsIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/_app/_layout/teams/': {
      id: '/_app/_layout/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AppLayoutTeamsIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/_app/_layout/users/': {
      id: '/_app/_layout/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AppLayoutUsersIndexImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutIndexRoute: typeof AppLayoutIndexRoute
  AppLayoutActivitiesIndexRoute: typeof AppLayoutActivitiesIndexRoute
  AppLayoutCompaniesIndexRoute: typeof AppLayoutCompaniesIndexRoute
  AppLayoutProjectsIndexRoute: typeof AppLayoutProjectsIndexRoute
  AppLayoutTeamsIndexRoute: typeof AppLayoutTeamsIndexRoute
  AppLayoutUsersIndexRoute: typeof AppLayoutUsersIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutIndexRoute: AppLayoutIndexRoute,
  AppLayoutActivitiesIndexRoute: AppLayoutActivitiesIndexRoute,
  AppLayoutCompaniesIndexRoute: AppLayoutCompaniesIndexRoute,
  AppLayoutProjectsIndexRoute: AppLayoutProjectsIndexRoute,
  AppLayoutTeamsIndexRoute: AppLayoutTeamsIndexRoute,
  AppLayoutUsersIndexRoute: AppLayoutUsersIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AppRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface authLayoutRouteChildren {
  authLayoutLoginIndexRoute: typeof authLayoutLoginIndexRoute
  authLayoutRegisterIndexRoute: typeof authLayoutRegisterIndexRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLayoutLoginIndexRoute: authLayoutLoginIndexRoute,
  authLayoutRegisterIndexRoute: authLayoutRegisterIndexRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface authRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppLayoutRouteWithChildren
  '/': typeof AppLayoutIndexRoute
  '/login': typeof authLayoutLoginIndexRoute
  '/register': typeof authLayoutRegisterIndexRoute
  '/activities': typeof AppLayoutActivitiesIndexRoute
  '/companies': typeof AppLayoutCompaniesIndexRoute
  '/projects': typeof AppLayoutProjectsIndexRoute
  '/teams': typeof AppLayoutTeamsIndexRoute
  '/users': typeof AppLayoutUsersIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AppRouteWithChildren
  '/': typeof AppLayoutIndexRoute
  '/login': typeof authLayoutLoginIndexRoute
  '/register': typeof authLayoutRegisterIndexRoute
  '/activities': typeof AppLayoutActivitiesIndexRoute
  '/companies': typeof AppLayoutCompaniesIndexRoute
  '/projects': typeof AppLayoutProjectsIndexRoute
  '/teams': typeof AppLayoutTeamsIndexRoute
  '/users': typeof AppLayoutUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_layout': typeof authLayoutRouteWithChildren
  '/_app/_layout': typeof AppLayoutRouteWithChildren
  '/_app/_layout/': typeof AppLayoutIndexRoute
  '/(auth)/_layout/login/': typeof authLayoutLoginIndexRoute
  '/(auth)/_layout/register/': typeof authLayoutRegisterIndexRoute
  '/_app/_layout/activities/': typeof AppLayoutActivitiesIndexRoute
  '/_app/_layout/companies/': typeof AppLayoutCompaniesIndexRoute
  '/_app/_layout/projects/': typeof AppLayoutProjectsIndexRoute
  '/_app/_layout/teams/': typeof AppLayoutTeamsIndexRoute
  '/_app/_layout/users/': typeof AppLayoutUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/register'
    | '/activities'
    | '/companies'
    | '/projects'
    | '/teams'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/login'
    | '/register'
    | '/activities'
    | '/companies'
    | '/projects'
    | '/teams'
    | '/users'
  id:
    | '__root__'
    | '/_app'
    | '/(auth)'
    | '/(auth)/_layout'
    | '/_app/_layout'
    | '/_app/_layout/'
    | '/(auth)/_layout/login/'
    | '/(auth)/_layout/register/'
    | '/_app/_layout/activities/'
    | '/_app/_layout/companies/'
    | '/_app/_layout/projects/'
    | '/_app/_layout/teams/'
    | '/_app/_layout/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  authRoute: typeof authRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  authRoute: authRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(auth)"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/_layout"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_layout"
      ]
    },
    "/(auth)/_layout": {
      "filePath": "(auth)/_layout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_layout/login/",
        "/(auth)/_layout/register/"
      ]
    },
    "/_app/_layout": {
      "filePath": "_app/_layout.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_layout/",
        "/_app/_layout/activities/",
        "/_app/_layout/companies/",
        "/_app/_layout/projects/",
        "/_app/_layout/teams/",
        "/_app/_layout/users/"
      ]
    },
    "/_app/_layout/": {
      "filePath": "_app/_layout/index.tsx",
      "parent": "/_app/_layout"
    },
    "/(auth)/_layout/login/": {
      "filePath": "(auth)/_layout/login/index.tsx",
      "parent": "/(auth)/_layout"
    },
    "/(auth)/_layout/register/": {
      "filePath": "(auth)/_layout/register/index.tsx",
      "parent": "/(auth)/_layout"
    },
    "/_app/_layout/activities/": {
      "filePath": "_app/_layout/activities/index.tsx",
      "parent": "/_app/_layout"
    },
    "/_app/_layout/companies/": {
      "filePath": "_app/_layout/companies/index.tsx",
      "parent": "/_app/_layout"
    },
    "/_app/_layout/projects/": {
      "filePath": "_app/_layout/projects/index.tsx",
      "parent": "/_app/_layout"
    },
    "/_app/_layout/teams/": {
      "filePath": "_app/_layout/teams/index.tsx",
      "parent": "/_app/_layout"
    },
    "/_app/_layout/users/": {
      "filePath": "_app/_layout/users/index.tsx",
      "parent": "/_app/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
